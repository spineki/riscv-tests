name: Generate test compilation artifacts

env:
  RISCV_TESTS_REPO: https://github.com/riscv-software-src/riscv-tests.git
  RISCV_TESTS_REV: master
  TOOLCHAIN_URL: https://github.com/xpack-dev-tools/riscv-none-elf-gcc-xpack/releases/download/v12.2.0-1/xpack-riscv-none-elf-gcc-12.2.0-1-linux-x64.tar.gz
  RISCV: /opt/riscv/bin

on:
  pull_request:
    types: [synchronize, opened, reopened]

jobs:
  test:
    name: Test debug (Ubuntu)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install -y device-tree-compiler

      - name: Get the toolchain from cache (if available)
        id: cache-restore-toolchain
        uses: actions/cache/restore@v3
        with:
          path: /opt/riscv
          key: "toolchain-${{env.TOOLCHAIN_URL}}"

      - if: ${{ steps.cache-restore-toolchain.outputs.cache-hit != 'true' }}
        name: "Build toolchain"
        run: |
          sudo apt-get install autoconf automake autotools-dev curl python3 python3-pip libmpc-dev libmpfr-dev libgmp-dev gawk build-essential bison flex texinfo gperf libtool patchutils bc zlib1g-dev libexpat-dev ninja-build git cmake libglib2.0-dev
          cd ..
          git clone https://github.com/riscv/riscv-gnu-toolchain
          cd riscv-gnu-toolchain
          mkdir -p /opt/riscv
          ./configure --prefix=/opt/riscv
          make -j$(nproc) && make linux -j$(nproc)
          
  
      - name: Save the toolchain to the cache (if necessary)
        id: cache-save-toolchain
        uses: actions/cache/save@v3
        with:
          path: /opt/riscv
          key: "toolchain-${{env.TOOLCHAIN_URL}}"

      - name: "Update PATH"
        run: |
          echo "/opt/riscv/bin" >> $GITHUB_PATH
          ls "/opt/riscv"
          ls "/opt/riscv/bin"
      
      - name: "Show config"
        run: |
           echo "riscv variable: $RISCV"

      - name: "Building tests from repository"
        run: |
           autoconf
           ./configure --prefix=$RISCV/target
           make -j$(nproc)
           make install -j$(nproc)

      - name: "Showing content of tests"
        run: |
          ls .
          echo "-----"
          ls isa
          echo "-----"
          ls  isa/rv64ui
          echo "-----"

      - name: "Compile tests"
        run: |
          mkdir -p compiled_tests
          python compile_tests.py . ./compiled_tests

      - uses: "actions/upload-artifact@v4"
        with:
          name: "compiled_test_artifact"
          path: "compiled_tests"
